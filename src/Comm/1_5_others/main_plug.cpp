#include "Sharun.hpp"

void* C_UNION_SUMMARY_f(player*, packet*);
void* C_STR_EVALUATE_LIST_f(player*, packet*);
void* C_TRADE_BROKER_HIGHEST_ITEM_LEVEL_f(player*, packet*);

void* S_ATTENDANCE_EVENT_REWARD_COUNT_f(const void**);
void* S_AVAILABLE_EVENT_MATCHING_LIST_f(const void**);
void* S_FATIGABILITY_POINT_f(const void**);
void* S_FESTIVAL_LIST_f(const void**);
void* S_MOVE_DISTANCE_DELTA_f(const void**);
void* S_STR_EVALUATE_LIST_f(const void**);
void* S_PET_INFO_CLEAR_f(const void**);
void* S_BROCAST_GUILD_FLAG_f(const void**);
void* S_PLAYER_CHANGE_ALL_PROF_f(const void**);
void* S_CURRENT_ELECTION_STATE_f(const void**);
void* S_F2P_PremiumUser_Permission_f(const void**);
void* S_SHOW_NPC_TO_MAP_f(const void**);
void* S_PET_INCUBATOR_INFO_CHANGE_f(const void**);
void* S_MY_DESCRIPTION_f(const void**);
void* S_PCBANGINVENTORY_DATALIST_f(const void**);
void* S_ABNORMALITY_END_f(const void**);
void* S_NPCGUILD_LIST_f(const void**);
void* S_ABNORMALITY_BEGIN_f(const void**);
void* S_RETURN_USER_f(const void**);
void* S_NOTIFY_CHANGE_CLASS_AND_ELITE_f(const void**);
void* S_LOAD_EP_INFO_f(const void**);
void* S_MASSTIGE_STATUS_f(const void**);
void* S_ONGOING_HUNTING_EVENT_LIST_f(const void**);

plugin_t Plugin = {
	.handle = NULL,
	.init = NULL,
	.uninit = NULL,
	.recv = (plugin_opcode_t[]){
		{ C_UNION_SUMMARY, "C_UNION_SUMMARY", (void*(*)(const void**)) C_UNION_SUMMARY_f },
		{ C_STR_EVALUATE_LIST, "C_STR_EVALUATE_LIST", (void*(*)(const void**)) C_STR_EVALUATE_LIST_f },
		{ C_TRADE_BROKER_HIGHEST_ITEM_LEVEL, "C_TRADE_BROKER_HIGHEST_ITEM_LEVEL", (void*(*)(const void**)) C_TRADE_BROKER_HIGHEST_ITEM_LEVEL_f },

		{ OPC_MAX, NULL, NULL }
	},
	.send = (plugin_opcode_t[]){
		{ S_ATTENDANCE_EVENT_REWARD_COUNT, "S_ATTENDANCE_EVENT_REWARD_COUNT", S_ATTENDANCE_EVENT_REWARD_COUNT_f },
		{ S_AVAILABLE_EVENT_MATCHING_LIST, "S_AVAILABLE_EVENT_MATCHING_LIST", S_AVAILABLE_EVENT_MATCHING_LIST_f },
		{ S_FATIGABILITY_POINT, "S_FATIGABILITY_POINT", S_FATIGABILITY_POINT_f },
		{ S_FESTIVAL_LIST, "S_FESTIVAL_LIST", S_FESTIVAL_LIST_f },
		{ S_MOVE_DISTANCE_DELTA, "S_MOVE_DISTANCE_DELTA", S_MOVE_DISTANCE_DELTA_f },
		{ S_STR_EVALUATE_LIST, "S_STR_EVALUATE_LIST", S_STR_EVALUATE_LIST_f },
		{ S_PET_INFO_CLEAR, "S_PET_INFO_CLEAR", S_PET_INFO_CLEAR_f },
		{ S_BROCAST_GUILD_FLAG, "S_BROCAST_GUILD_FLAG", S_BROCAST_GUILD_FLAG_f },
		{ S_PLAYER_CHANGE_ALL_PROF, "S_PLAYER_CHANGE_ALL_PROF", S_PLAYER_CHANGE_ALL_PROF_f },
		{ S_CURRENT_ELECTION_STATE, "S_CURRENT_ELECTION_STATE", S_CURRENT_ELECTION_STATE_f },
		{ S_F2P_PremiumUser_Permission, "S_F2P_PremiumUser_Permission", S_F2P_PremiumUser_Permission_f },
		{ S_SHOW_NPC_TO_MAP, "S_SHOW_NPC_TO_MAP", S_SHOW_NPC_TO_MAP_f },
		{ S_PET_INCUBATOR_INFO_CHANGE, "S_PET_INCUBATOR_INFO_CHANGE", S_PET_INCUBATOR_INFO_CHANGE_f },
		{ S_MY_DESCRIPTION, "S_MY_DESCRIPTION", S_MY_DESCRIPTION_f },
		{ S_PCBANGINVENTORY_DATALIST, "S_PCBANGINVENTORY_DATALIST", S_PCBANGINVENTORY_DATALIST_f },
		{ S_ABNORMALITY_END, "S_ABNORMALITY_END", S_ABNORMALITY_END_f },
		{ S_NPCGUILD_LIST, "S_NPCGUILD_LIST", S_NPCGUILD_LIST_f },
		{ S_ABNORMALITY_BEGIN, "S_ABNORMALITY_BEGIN", S_ABNORMALITY_BEGIN_f },
		{ S_RETURN_USER, "S_RETURN_USER", S_RETURN_USER_f },
		{ S_NOTIFY_CHANGE_CLASS_AND_ELITE, "S_NOTIFY_CHANGE_CLASS_AND_ELITE", S_NOTIFY_CHANGE_CLASS_AND_ELITE_f },
		{ S_LOAD_EP_INFO, "S_LOAD_EP_INFO", S_LOAD_EP_INFO_f },
		{ S_MASSTIGE_STATUS, "S_MASSTIGE_STATUS", S_MASSTIGE_STATUS_f },
		{ S_ONGOING_HUNTING_EVENT_LIST, "S_ONGOING_HUNTING_EVENT_LIST", S_ONGOING_HUNTING_EVENT_LIST_f },

		{ OPC_MAX, NULL, NULL }
	},
};

